{"ast":null,"code":"import _slicedToArray from \"E:\\\\Documents\\\\Programming\\\\Github\\\\Recipe-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Documents\\\\Programming\\\\Github\\\\Recipe-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\nimport chef from './chef.png';\n\nconst App = () => {\n  const APP_ID = '59199727';\n  const APP_KEY = 'ba0fd152b27e44370969231e9b078c7c';\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1]; //taking things from this state passing down into props then to Recipe.js component\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  const _useState7 = useState(chef),\n        _useState8 = _slicedToArray(_useState7, 2),\n        bgimage = _useState8[0],\n        setbgimage = _useState8[1]; //first time app renders, effect is run\n\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(APP_ID, \"&app_key=\").concat(APP_KEY));\n    const data = await response.json(); //don't know how long to fetch. use await whenever there is a promise\n\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    // as you write, state changes\n    setSearch(e.target.value); //value of input on target: search bar\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n    removeElementsByClass('image');\n  };\n\n  function removeElementsByClass(className) {\n    var elements = document.getElementsByClassName(className);\n\n    while (elements.length > 0) {\n      elements[0].parentNode.removeChild(elements[0]);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Search Recipes By Ingredient: \"), React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"img\", {\n    className: \"image\",\n    src: bgimage,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, recipes.map(recipe => React.createElement(Recipe, {\n    key: recipe.recipe.label //props / recipe from api\n    ,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories.toFixed(0),\n    image: recipe.recipe.image,\n    url: recipe.recipe.url,\n    ingredients: recipe.recipe.ingredients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["E:\\Documents\\Programming\\Github\\Recipe-app\\src\\App.js"],"names":["React","useEffect","useState","Recipe","chef","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","bgimage","setbgimage","getRecipes","response","fetch","data","json","hits","updateSearch","e","target","value","getSearch","preventDefault","removeElementsByClass","className","elements","document","getElementsByClassName","length","parentNode","removeChild","map","recipe","label","calories","toFixed","image","url","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Recipe from './Recipe'\r\nimport './App.css'\r\nimport chef from './chef.png'\r\n\r\nconst App = () => {\r\n    const APP_ID = '59199727'\r\n    const APP_KEY = 'ba0fd152b27e44370969231e9b078c7c'\r\n\r\n    const [recipes, setRecipes] = useState([]) //taking things from this state passing down into props then to Recipe.js component\r\n    const [search, setSearch] = useState('')\r\n    const [query, setQuery] = useState('')\r\n    const [bgimage, setbgimage] = useState(chef)\r\n\r\n    //first time app renders, effect is run\r\n    useEffect(() => {\r\n        getRecipes()\r\n    }, [query])\r\n\r\n    const getRecipes = async () => {\r\n        const response = await fetch(\r\n            `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n        )\r\n        const data = await response.json() //don't know how long to fetch. use await whenever there is a promise\r\n        setRecipes(data.hits)\r\n    }\r\n\r\n    const updateSearch = (e) => {\r\n        // as you write, state changes\r\n        setSearch(e.target.value) //value of input on target: search bar\r\n    }\r\n\r\n    const getSearch = (e) => {\r\n        e.preventDefault()\r\n        setQuery(search)\r\n        setSearch('')\r\n        removeElementsByClass('image')\r\n    }\r\n\r\n    function removeElementsByClass(className) {\r\n        var elements = document.getElementsByClassName(className)\r\n        while (elements.length > 0) {\r\n            elements[0].parentNode.removeChild(elements[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <h1 className='heading'>Search Recipes By Ingredient: </h1>\r\n            <form onSubmit={getSearch} className='search-form'>\r\n                <input\r\n                    className='search-bar'\r\n                    type='text'\r\n                    value={search}\r\n                    onChange={updateSearch}\r\n                />\r\n                <button className='search-button' type='submit'>\r\n                    Search\r\n                </button>\r\n            </form>\r\n            <img className='image' src={bgimage} alt='' />\r\n            <div className='recipes'>\r\n                {recipes.map((recipe) => (\r\n                    <Recipe\r\n                        key={recipe.recipe.label} //props / recipe from api\r\n                        title={recipe.recipe.label}\r\n                        calories={recipe.recipe.calories.toFixed(0)}\r\n                        image={recipe.recipe.image}\r\n                        url={recipe.recipe.url}\r\n                        ingredients={recipe.recipe.ingredients}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}