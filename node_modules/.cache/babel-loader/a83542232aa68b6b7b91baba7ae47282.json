{"ast":null,"code":"import _slicedToArray from \"E:\\\\Documents\\\\Programming\\\\Github\\\\Recipe-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Documents\\\\Programming\\\\Github\\\\Recipe-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\nimport chef from \"./chef.png\";\n\nconst App = () => {\n  const APP_ID = \"59199727\";\n  const APP_KEY = \"ba0fd152b27e44370969231e9b078c7c\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1]; //taking things from this state passing down into props then to Recipe.js component\n\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  const _useState7 = useState(chef),\n        _useState8 = _slicedToArray(_useState7, 2),\n        bgimage = _useState8[0],\n        setbgimage = _useState8[1]; //first time app renders, effect is run\n\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(APP_ID, \"&app_key=\").concat(APP_KEY));\n    const data = await response.json(); //don't know how long to fetch. use await whenever there is a promise\n\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    // as you write, state changes\n    setSearch(e.target.value); //value of input on target: search bar\n\n    setbgimage(\"\");\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Search Recipes By Ingredient: \"), React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"img\", {\n    className: \"image\",\n    src: bgimage,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, recipes.map(recipe => React.createElement(Recipe, {\n    key: recipe.recipe.label //props / recipe from api\n    ,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories.toFixed(0),\n    image: recipe.recipe.image,\n    url: recipe.recipe.url,\n    ingredients: recipe.recipe.ingredients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["E:\\Documents\\Programming\\Github\\Recipe-app\\src\\App.js"],"names":["React","useEffect","useState","Recipe","chef","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","bgimage","setbgimage","getRecipes","response","fetch","data","json","hits","updateSearch","e","target","value","getSearch","preventDefault","map","recipe","label","calories","toFixed","image","url","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport \"./App.css\";\r\nimport chef from \"./chef.png\";\r\n\r\nconst App = () => {\r\n  const APP_ID = \"59199727\";\r\n  const APP_KEY = \"ba0fd152b27e44370969231e9b078c7c\";\r\n\r\n  const [recipes, setRecipes] = useState([]); //taking things from this state passing down into props then to Recipe.js component\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [bgimage, setbgimage] = useState(chef);\r\n\r\n  //first time app renders, effect is run\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(\r\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    const data = await response.json(); //don't know how long to fetch. use await whenever there is a promise\r\n    setRecipes(data.hits);\r\n  };\r\n\r\n  const updateSearch = e => {\r\n    // as you write, state changes\r\n    setSearch(e.target.value); //value of input on target: search bar\r\n    setbgimage(\"\");\r\n  };\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"heading\">Search Recipes By Ingredient: </h1>\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n        <input\r\n          className=\"search-bar\"\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={updateSearch}\r\n        />\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <img className=\"image\" src={bgimage} alt=\"\" />\r\n      <div className=\"recipes\">\r\n        {recipes.map(recipe => (\r\n          <Recipe\r\n            key={recipe.recipe.label} //props / recipe from api\r\n            title={recipe.recipe.label}\r\n            calories={recipe.recipe.calories.toFixed(0)}\r\n            image={recipe.recipe.image}\r\n            url={recipe.recipe.url}\r\n            ingredients={recipe.recipe.ingredients}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}